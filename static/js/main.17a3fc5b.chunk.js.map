{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectUser","selectedId","className","map","todo","classnames","completed","htmlFor","type","id","checked","readOnly","title","onClick","userId","CurrentUser","user","clearUser","name","email","phone","getTodos","a","fetch","response","json","getUser","App","state","selectedUserId","filterBy","then","userFromServer","setState","handleCnange","event","target","value","filterTodos","filter","toLocaleLowerCase","includes","todosFromServer","this","onChange","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17a3fc5b.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './TodoList.scss';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todos: Todo[];\n  selectUser: any,\n  selectedId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectUser, selectedId }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map((todo: Todo) => {\n          return (\n            <li\n              key={todo.id}\n              className={\n                classnames('TodoList__item', { 'TodoList__item--unchecked': !todo.completed }, { 'TodoList__item--checked': todo.completed })\n              }\n            >\n              <label htmlFor=\"todo1\">\n                <input type=\"checkbox\" id=\"todo1\" checked={todo.completed} readOnly />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                onClick={() => selectUser(todo.userId)}\n                className={classnames('TodoList__user-button button', { 'TodoList__user-button--selected': todo.userId === selectedId })}\n                type=\"button\"\n              >\n                User&nbsp;\n                {todo.userId}\n              </button>\n            </li>\n          );\n        })}\n\n        {/* <li className=\"TodoList__item TodoList__item--checked\">\n          <label>\n            <input type=\"checkbox\" checked readOnly />\n            <p>distinctio vitae autem nihil ut molestias quo</p>\n          </label>\n\n          <button\n            className=\"TodoList__user-button button\"\n            type=\"button\"\n          >\n            User&nbsp;#2\n          </button>\n        </li> */}\n      </ul>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n  clearUser: any,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ user, clearUser }) => (\n  <div className=\"CurrentUser\">\n    <button\n      onClick={clearUser}\n      type=\"button\"\n      className=\"button\"\n    >\n      Clear user\n    </button>\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:\n        {user.id}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n  </div>\n);\n","const API_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async () => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUser = async (id: number) => {\n  const response = await fetch(`https://mate.academy/students-api/users/${id}`);\n\n  return response.json();\n};\n\nexport {};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/todo';\nimport { User } from './types/user';\n\ninterface State {\n  selectedUserId: number;\n  user: User | null,\n  todos: Todo[];\n  title: string,\n  filterBy: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n    user: null,\n    title: '',\n    filterBy: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todosFromServer => {\n        this.setState({ todos: todosFromServer });\n      });\n  }\n\n  selectUser = (id: number) => {\n    if (this.state.selectedUserId !== id) {\n      getUser(id)\n        .then(userFromServer => {\n          this.setState({ user: userFromServer, selectedUserId: id });\n        });\n    }\n  };\n\n  clearUser = () => {\n    this.setState({ user: null, selectedUserId: 0 });\n  };\n\n  handleCnange = (event: any) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({ ...state, [name]: value }));\n  };\n\n  filterTodos = () => {\n    let filterTodos = [...this.state.todos];\n\n    if (this.state.filterBy === 'completed') {\n      filterTodos = filterTodos.filter(todo => todo.completed === true);\n    }\n\n    if (this.state.filterBy === 'active') {\n      filterTodos = filterTodos.filter(todo => todo.completed === false);\n    }\n\n    return filterTodos.filter(todo => {\n      return todo.title.toLocaleLowerCase().includes(this.state.title.toLocaleLowerCase());\n    });\n  };\n\n  render() {\n    const { selectedUserId, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <nav className=\"search__nav\">\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              value={this.state.title}\n              onChange={this.handleCnange}\n              placeholder=\"filter the todos by title\"\n            />\n            <select name=\"filterBy\" id=\"filter\" value={this.state.filterBy} onChange={this.handleCnange}>\n              <option value=\"all\">All</option>\n              <option value=\"completed\">Completed</option>\n              <option value=\"active\">Active</option>\n            </select>\n          </nav>\n          <TodoList\n            todos={this.filterTodos()}\n            selectUser={this.selectUser}\n            selectedId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId && user ? (\n              <CurrentUser user={user} clearUser={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}